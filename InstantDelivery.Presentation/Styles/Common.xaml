<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:converters="clr-namespace:InstantDelivery.Converters">

    <Style TargetType="{x:Type Button}" x:Key="EditDialogButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="3"></Setter>
        <Setter Property="MinWidth" Value="60"></Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}" x:Key="EditComboBoxLabel" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="MinWidth" Value="140"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
    </Style>
    <Style TargetType="{x:Type Label}" x:Key="EditDialogLabel" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="MinWidth" Value="140"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="EditDialogComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="EditDialogTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self},  Path=(Validation.HasError)}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="Red"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style
       x:Key="ExpanderLeftMenu" TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style
       x:Key="ButtonInExpanderLeftMenu" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0 1 0 1" />
    </Style>

    <Style x:Key="LeftPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <Style x:Key="DialogWindow" TargetType="controls:MetroWindow">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="ShowTitleBar" Value="False" />
        <Setter Property="ShowIconOnTitleBar" Value="False" />
        <Setter Property="ShowMinButton" Value="False" />
        <Setter Property="ShowMaxRestoreButton" Value="False" />
        <Setter Property="ShowSystemMenuOnRightClick" Value="False" />
        <Setter Property="ShowCloseButton" Value="False" />
    </Style>

    <converters:EnumToDescriptionConverter x:Key="EnumToDescription" />
    <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
</ResourceDictionary>
